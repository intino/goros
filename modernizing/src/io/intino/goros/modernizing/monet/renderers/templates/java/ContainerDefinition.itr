rule type(show, components) and trigger(declaration)
    private Node contain;

rule type(show, components) and trigger(hideToolbar)
    <<$component+hideToolbar...[$NL]>>

rule type(show, components)
	public $definition+firstUpperCase~$view+firstUpperCase~ViewTemplate contain(Node contain) {
		this.contain = contain;
		return this;
	}

	@Override
	public void refresh() {
		super.refresh();
		<<$component...[$NL]>>
	}

rule type(component) and trigger(hideToolbar)
    $name+firstLowerCase~$view+firstUpperCase~Stamp.hideToolbar();

rule type(component, collection)
    $name+firstLowerCase~$view+firstUpperCase~Stamp.node(contain);
    $name+firstLowerCase~$view+firstUpperCase~Stamp.view("$viewCode");
    $name+firstLowerCase~$view+firstUpperCase~Stamp.toggleView(ToggleEvent.State.On);
    $name+firstLowerCase~$view+firstUpperCase~Stamp.readonly(readonly);
    $name+firstLowerCase~$view+firstUpperCase~Stamp.refresh();

rule type(component)
    $name+firstLowerCase~$view+firstUpperCase~Stamp.node(contain);
    $name+firstLowerCase~$view+firstUpperCase~Stamp.view("$viewCode");
    $name+firstLowerCase~$view+firstUpperCase~Stamp.readonly(readonly);
    $name+firstLowerCase~$view+firstUpperCase~Stamp.refresh();