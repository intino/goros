def type(ui)
    dsl Konos

    [$definition+use...[$NL]]
    use Tasks
    use Theme

    Service $module+firstUpperCase~Elements as UI(port="{port}", title="", favicon = "")
        googleApiKey = ""

        Use(package = "io.intino", name = "Goros", service = "GorosElements") goros

        Resource(path = "/") home as Page(AppTemplate) Main Confidential
        Resource(path = "/error") error as Page(ErrorTemplate) Confidential
        Resource(path = "/permisos") roles as Page(AppTemplate) Confidential
        Resource(path = "/mistareas/vista/:folder") taskTray as Page(AppTemplate) Confidential
        Resource(path = "/tareas/vista/:folder") taskBoard as Page(AppTemplate) Confidential
        Resource(path = "/noticias") news as Page(AppTemplate) Confidential
        Resource(path = "/papelera") trash as Page(AppTemplate) Confidential
        Resource(path = "/cuadromando") dashboard as Page(AppTemplate) Confidential
        [$definition+resource...[$NL]]

    Template(layout=Horizontal Flexible) AppTemplate as Relative(height=100%,width=100%)
        Block drawer as Drawer(variant=PersistentAndMini) Absolute(width=200px)
            Block(layout=Horizontal Center) inicio > MaterialIconButton(title="Inicio", icon="Home", format=black middleAirLeft middleAirRight minDrawerButtonSize) as Action Addressable($module+firstUpperCase~Elements.inicio); Text(value="Inicio")
            Block(layout=Horizontal Center) dashboard > MaterialIconButton(title="Cuadro de mando", icon="Timeline", format=black middleAirLeft middleAirRight minDrawerButtonSize) as Action Addressable($module+firstUpperCase~Elements.dashboard); Text(value="Cuadro de mando")
            Divider
            Block(layout=Horizontal Center) roles > MaterialIconButton(title="Permisos", icon="People", format=black middleAirLeft middleAirRight minDrawerButtonSize) as Action Addressable($module+firstUpperCase~Elements.roles); Text(value="Permisos")
            Block(layout=Horizontal Center) taskTray > MaterialIconButton(title="Mis tareas", icon="HowToReg", format=black middleAirLeft middleAirRight minDrawerButtonSize) taskTrayLink as Action Addressable($module+firstUpperCase~Elements.taskTray); Text(value="Mis tareas")
            Block(layout=Horizontal Center) taskBoard > MaterialIconButton(title="Tareas", icon="PlaylistAddCheck", format=black middleAirLeft middleAirRight minDrawerButtonSize) taskBoardLink as Action Addressable($module+firstUpperCase~Elements.taskBoard); Text(value="Tareas")
            Block(layout=Horizontal Center) news > MaterialIconButton(title="Noticias", icon="Receipt", format=black middleAirLeft middleAirRight minDrawerButtonSize) as Action Addressable($module+firstUpperCase~Elements.news); Text(value="Noticias")
            Block(layout=Horizontal Center) trash > MaterialIconButton(title="Papelera", icon="Delete", format=black middleAirLeft middleAirRight minDrawerButtonSize) as Action Addressable($module+firstUpperCase~Elements.trash); Text(value="Papelera")

        Block(layout=Vertical Flexible)
            Header(color="white", elevation=0, format=spaced bottomBordered) as Absolute(height=80px)
                TemplateStamp(template=HeaderTemplate)

            Block(layout=Vertical Flexible CenterCenter) loading > Spinner(format=secondary)

            Block(layout=Vertical Flexible CenterCenter, visible=false) updateRequiredPage
                Text(value="Hay una actualización pendiente. No se puede acceder en estos momentos. Inténtelo más tarde.", format=h4)
                Link(title="Intentar de nuevo", format=airTop) reloadPage as Action

            Block(layout=Vertical Flexible) dashboardPage as Conditional > TemplateStamp(template=DashboardTemplate) dashboardStamp
            Block(layout=Vertical Flexible) rolesPage as Conditional > OwnerTemplateStamp(template="RolesTemplate", owner=$module+firstUpperCase~Elements.goros) rolesStamp
            Block(layout=Vertical Flexible) taskTrayPage as Conditional > TemplateStamp(template=TaskTrayTemplate) taskTrayStamp
            Block(layout=Vertical Flexible) taskBoardPage as Conditional > TemplateStamp(template=TaskBoardTemplate) taskBoardStamp
            Block(layout=Vertical Flexible) newsPage as Conditional > OwnerTemplateStamp(template="NewsTemplate", owner=$module+firstUpperCase~Elements.goros) newsStamp
            Block(layout=Vertical Flexible) trashPage as Conditional > OwnerTemplateStamp(template="TrashTemplate", owner=$module+firstUpperCase~Elements.goros) trashStamp
            [$definition+page...[$NL]]

    Template(layout=Horizontal Flexible) HeaderTemplate
        Block(layout=Horizontal Flexible Center)
            Image(value="images/logo.png", format=minLogoSize) logo as Absolute(height=60px, width=72px)
            Block
                Text(format=h3 bold) title
                Text(format=body2) subtitle
        Block(layout=Horizontal EndJustified Center)
            MaterialIconButton(title="Aplicaciones", icon="Apps", format=black airRight) apps as OpenPopover(businessUnitsBlock)
            User(mode=OnlyPhoto)

            Block(format=air) businessUnitsBlock as Popover Absolute(width=400px)
                OwnerTemplateStamp(template="BusinessUnitsTemplate", owner=$module+firstUpperCase~Elements.goros) businessUnitsStamp

    Template(layout=Horizontal Flexible) DashboardTemplate
        Text(value="Cuadro Mando")

    Template(layout=Vertical Flexible) ErrorTemplate as Relative(height=100%,width=100%)
        Block(layout=Vertical CenterCenter, format=grey) as Relative(height=100%,width=100%)
            Block(format=visible) as Absolute(width=400px, height=200px) Paper
                Block(layout=Vertical Flexible CenterJustified, spacing=DP16, format=relative) as Relative(height=100%)
                    Block(layout=Vertical CenterCenter)
                        Image(value="images/logo.png")
                        Text(value="No tiene permisos para acceder", format=h4 airTop)
                Block
                    Divider
                    Button(title="Cerrar sesión") logoutButton as Action
end

def type(definition & index) trigger(use)
end

def type(definition) trigger(use)
    use $name+firstUpperCase
end

def type(definition & index) trigger(resource)
end

def type(definition) trigger(resource)
    Resource(path = "/$name+lowerCase") $name+lowerCase as Page(AppTemplate) Confidential
end

def type(definition & index) trigger(page)
end

def type(definition) trigger(page)
    Block(layout=Vertical Flexible) $name+lowerCase~Page as Conditional > TemplateStamp(template=$name+firstUpperCase~Template) $name+lowerCase~Stamp
end