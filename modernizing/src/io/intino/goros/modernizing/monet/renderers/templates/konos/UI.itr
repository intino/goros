rule type(ui)
    dsl Konos

    <<$definition+use...[$NL]>>
    use Tasks
    use Theme

    Service $module+firstUpperCase~Elements as UI(port="{port}", title="$title", favicon = "$favicon")
        googleApiKey = "{mobile-google-api-key}"

    	Authentication(by = "")
        Use(package = "io.intino.goros.unit", name = "Unit", service = "UnitElements") goros

        Resource(path = "/") home as Page(AppTemplate) Main Confidential
        Resource(path = "/error") error as Page(ErrorTemplate) Confidential
        Resource(path = "/mistareas/vista/:folder") taskTray as Page(AppTemplate) Confidential
        Resource(path = "/tareas/vista/:folder") taskBoard as Page(AppTemplate) Confidential
        Resource(path = "/elemento/:name/:mode") singleton as Page(AppTemplate) Confidential
        Resource(path = "/instancia/:name/:id/:view/:mode") instance as Page(AppTemplate) Confidential
        Resource(path = "/tarea/:name/:inbox/:task") task as Page(AppTemplate) Confidential
        Resource(path = "/permisos") roles as Page(AppTemplate) Confidential
        Resource(path = "/desechos") trash as Page(AppTemplate) Confidential
        Resource(path = "/noticias") news as Page(AppTemplate) Confidential
        Resource(path = "/cuadro-mando") dashboard as Page(AppTemplate) Confidential

    Template(layout=Horizontal Flexible) AppTemplate as Relative(height=100%,width=100%)
        Block drawer as Drawer(variant=PersistentAndMini) Absolute(width=200px)
            Block(layout=Horizontal EndJustified Center) as Absolute(height=49px)
                MaterialIconButton(title="open menu", icon="ChevronRight", format=airMenuRight smallAirTop) as OpenDrawer(drawer=drawer)
                MaterialIconButton(title="minimize", icon="ChevronLeft", format=airMenuRight smallAirTop) as CloseDrawer(drawer=drawer)
            Divider
            <<$definition+declaration...[$NL]>>
            Block(layout=Horizontal Center, visible=false) dashboard > MaterialIconButton(title="Cuadro de mando", icon="Dashboard", format=black middleAirLeft middleAirRight minDrawerButtonSize) dashboardIconLink as Action Addressable($module+firstUpperCase~Elements.dashboard); Link(title="Cuadro de mando") dashboardLink as Action Addressable($module+firstUpperCase~Elements.dashboard)
            Divider
            Block(layout=Horizontal Center, visible=false) roles > MaterialIconButton(title="Permisos", icon="People", format=black middleAirLeft middleAirRight minDrawerButtonSize) as Action Addressable($module+firstUpperCase~Elements.roles); Link(title="Permisos") as Action Addressable($module+firstUpperCase~Elements.roles)
            Block(layout=Horizontal Center, visible=false) taskTray as Badge(max=99, value=0, format=badgeBlock) > MaterialIconButton(title="Mis tareas", icon="HowToReg", format=black middleAirLeft middleAirRight minDrawerButtonSize) taskTrayIconLink as Action Addressable($module+firstUpperCase~Elements.taskTray); Link(title="Mis tareas") taskTrayLink as Action Addressable($module+firstUpperCase~Elements.taskTray)
            Block(layout=Horizontal Center, visible=false) taskBoard as Badge(max=99, value=0, format=badgeBlock) > MaterialIconButton(title="Tareas", icon="PlaylistAddCheck", format=black middleAirLeft middleAirRight minDrawerButtonSize) taskBoardIconLink as Action Addressable($module+firstUpperCase~Elements.taskBoard); Link(title="Tareas") taskBoardLink as Action Addressable($module+firstUpperCase~Elements.taskBoard)
            Block(layout=Horizontal Center, visible=false) news as Badge(max=99, value=0, format=badgeBlock) > MaterialIconButton(title="Noticias", icon="Receipt", format=black middleAirLeft middleAirRight minDrawerButtonSize) newsIconLink as Action Addressable($module+firstUpperCase~Elements.news); Link(title="Noticias") newsLink as Action Addressable($module+firstUpperCase~Elements.news)
            Block(layout=Horizontal Center, visible=false) trash > MaterialIconButton(title="Papelera", icon="Delete", format=black middleAirLeft middleAirRight minDrawerButtonSize) as Action Addressable($module+firstUpperCase~Elements.trash); Link(title="Papelera") as Action Addressable($module+firstUpperCase~Elements.trash)

        Block(layout=Vertical Flexible)
            Header(color="white", elevation=0, format=headerStyle) header as Absolute(height=55px)
                TemplateStamp(template=HeaderTemplate)

            Block(layout=Vertical Flexible CenterCenter) loading > Spinner(format=secondary)
            Block(layout=Vertical Flexible CenterCenter, visible=false) forbiddenPage > Text(value="No tiene permisos en este servicio", format=h4, translate=true)

            Block(layout=Vertical Flexible CenterCenter, visible=false) updateRequiredPage
                Text(value="Hay una actualización pendiente. No se puede acceder en estos momentos. Inténtelo más tarde.", format=h4)
                Link(title="Intentar de nuevo", format=airTop) reloadPage as Action

            Block(layout=Vertical Flexible, visible=false) dashboardPage as Conditional > InheritTemplateStamp(template="DashboardTemplate", owner=$module+firstUpperCase~Elements.goros) dashboardStamp
            Block(layout=Vertical Flexible, visible=false) rolesPage as Conditional > InheritTemplateStamp(template="RolesTemplate", owner=$module+firstUpperCase~Elements.goros) rolesStamp
            Block(layout=Vertical Flexible, visible=false) taskTrayPage as Conditional > TemplateStamp(template=TaskTrayTemplate) taskTrayStamp
            Block(layout=Vertical Flexible, visible=false) taskBoardPage as Conditional > TemplateStamp(template=TaskBoardTemplate) taskBoardStamp
            Block(layout=Vertical Flexible, visible=false) newsPage as Conditional > InheritTemplateStamp(template="NewsTemplate", owner=$module+firstUpperCase~Elements.goros) newsStamp
            Block(layout=Vertical Flexible, visible=false) trashPage as Conditional > InheritTemplateStamp(template="TrashTemplate", owner=$module+firstUpperCase~Elements.goros) trashStamp
            <<$definition+page...[$NL]>>

        Dialog(title="Sesión cerrada") sessionClosedDialog as Modal
            Block
                Text(format=h6 airBottom, value="Se ha cerrado la sesión por inactividad o porque ha salido de su sesión en la federación")
                Block(layout=Horizontal CenterJustified, format=airBottom) > Button(title="Volver a cargar la página") as OpenPage(page=$module+firstUpperCase~Elements.home)

    Template(layout=Horizontal Flexible) HeaderTemplate
        Block(layout=Horizontal Flexible Center)
            Block(format=relative)
                Link(title="", format=homeLink) as Action Addressable($module+firstUpperCase~Elements.home)
                Image(value="images/logo.png", format=minLogoSize) logo as Absolute(height=40px)
            Block
                Text(format=h3 bold) title
                Text(format=body2) subtitle
        Block(layout=Horizontal EndJustified Center)
            MaterialIconButton(title="Aplicaciones", icon="Apps", format=black airRight) apps as OpenPopover(businessUnitsBlock)
            User(mode=OnlyPhoto)

            Block(format=air autoOverflow) businessUnitsBlock as Popover Absolute(width=400px, height=300px)
                InheritTemplateStamp(template="BusinessUnitsTemplate", owner=$module+firstUpperCase~Elements.goros) businessUnitsStamp

    Template(layout=Vertical Flexible) ErrorTemplate as Relative(height=100%,width=100%)
        Block(layout=Vertical CenterCenter, format=grey) as Relative(height=100%,width=100%)
            Block(format=visible) as Absolute(width=400px, height=200px) Paper
                Block(layout=Vertical Flexible CenterJustified, spacing=DP16, format=relative) as Relative(height=100%)
                    Block(layout=Vertical CenterCenter)
                        Image(value="images/logo.png")
                        Text(value="No tiene permisos para acceder", format=h4 airTop)
                Block
                    Divider
                    Button(title="Cerrar sesión") logoutButton as Action

rule type(definition, index) and trigger(use)

rule type(definition, source) and trigger(use)

rule type(definition) and trigger(use)
    use $name+firstUpperCase

rule type(definition, container, environment) and trigger(declaration)
    Block(layout=Horizontal Center, visible=false) $name+firstLowerCase > AvatarIconButton(title="$label", color="black", highlight=Fill, format=black middleAirLeft middleAirRight minDrawerButtonSize) $name+firstLowerCase~IconLink as Action Addressable($module+firstUpperCase~Elements.$resourceType); Link(title="$label") $name+firstLowerCase~Link as Action Addressable($module+firstUpperCase~Elements.$resourceType)

rule type(definition, desktop) and trigger(declaration)
    Block(layout=Horizontal Center, visible=false) $name+firstLowerCase > AvatarIconButton(title="$label", color="black", highlight=Fill, format=black middleAirLeft middleAirRight minDrawerButtonSize) $name+firstLowerCase~IconLink as Action Addressable($module+firstUpperCase~Elements.$resourceType); Link(title="$label") $name+firstLowerCase~Link as Action Addressable($module+firstUpperCase~Elements.$resourceType)

rule type(definition) and trigger(declaration)

rule type(definition, index) and trigger(page)

rule type(definition, source) and trigger(page)
    Block(layout=Vertical Flexible, visible=false) $name+firstLowerCase~Page as Conditional > InheritTemplateStamp(template="SourceTemplate", owner=$module+firstUpperCase~Elements.goros) $name+firstLowerCase~Stamp

rule type(definition) and trigger(page)
    Block(layout=Vertical Flexible, visible=false) $name+firstLowerCase~Page as Conditional > TemplateStamp(template=$name+firstUpperCase~Template) $name+firstLowerCase~Stamp