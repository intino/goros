rule type(nodedefinition)
    dsl Konos

    <<$view+use...[$NL]>>
    use UI
    use Theme
    <<$toolbar+import>>

    Template(layout=Vertical Flexible, format=smallAir) $name+firstUpperCase~Template
        Block(layout=Horizontal, format=headerSpaced) header
            Block(layout=Vertical Flexible)
                Block(layout=Horizontal)
                    <<$desktop>>
                    <<$parent>>
                    Text(value="$label", format=h4 bold) label
                Text(format=body2 grey) description

        Block(layout=Horizontal Flexible, format=smallAirTop) > TemplateStamp(template=$name+firstUpperCase~EmbeddedTemplate) content

    Template(layout=Vertical Flexible) $name+firstUpperCase~EmbeddedTemplate as Relative(height=100%)
        Block(layout=Horizontal, format=bottomBordered)
            $toolbar+navigableExpanded
            Block(layout=Horizontal Flexible, format=middleTopSpaced middleBottomSpaced middleAirLeft) toolbar
                Block(layout=Vertical CenterJustified Flexible)
                    Block(layout=Horizontal)
                        $toolbar+editable
                        Button(title="Restaurar", size=Small, highlight=Outline, format=airLeft, visible=false) restore as Action Affirmed("¿Está seguro que quiere restaurar esta revisión?")
                Block(layout=Horizontal EndJustified)
                    $toolbar+navigable

        Block(layout=Horizontal) header
            Block(layout=Vertical) headerToolbar as Relative(width=100%, offsetWidth=40px)
                Selector viewSelector as Tabs(scrollButtons=Auto)
                    <<$view+declaration...[$NL]>>
            Block(layout=Horizontal EndJustified Center)
                MaterialIconButton(title="Abrir", icon="ZoomOutMap", size=Small, visible=false) openContain as OpenLayer Addressable($module+firstUpperCase~Elements.instance)

        Block(layout=Vertical Flexible) content as Relative(height=100%)
            <<$view+page...[$NL]>>

    <<$view...[$NL]>>
    <<$compositeView...[$NL]>>

rule type(desktop)
    Link(title="$label", format=h4 middleAirRight) desktopLink as Action Addressable($module+firstUpperCase~Elements.$resourceType)
    Text(value="/", format=h4 middleAirRight)

rule type(parent)
    Link(title="$label", format=h4 middleAirRight) parentLink as Action Addressable($module+firstUpperCase~Elements.$resourceType)
    Text(value="/", format=h4 middleAirRight)

rule type(toolbar) and trigger(import)
    $addList+import

rule type(toolbar, singleton) and trigger(editable)
    <<$operationsGroup>>
    <<$operation...[$NL]>>
    <<$addList+option>>
    Button(title="Copiar", size=Small, highlight=Outline, format=airRight, visible=false) copy as Action
    Button(title="Editar", size=Small, highlight=Outline, format=airRight) edit as Action

rule type(toolbar) and trigger(editable)
    <<$operationsGroup>>
    <<$operation...[$NL]>>
    <<$addList+option>>
    Button(title="Copiar", size=Small, highlight=Outline, format=airRight, visible=false) copy as Action
    Button(title="Editar", size=Small, highlight=Outline, format=airRight) edit as Action
    Button(title="Eliminar", size=Small, highlight=Outline, visible=false) remove as Action Affirmed("Are you sure you want to remove element?")

rule type(toolbar, collectable) and trigger(navigableExpanded)
    Block(format=middleAirLeft middleAirRight)
        Block(layout=Horizontal Center StartJustified)
            MaterialIconButton(title="Mostrar listado", icon="ArrowBack", size=Small, format=middleAirRight, visible=false) showCollectionBack
            MaterialIconButton(title="Mostrar listado", icon="Menu", size=Small, format=middleAirRight, visible=false) showCollectionMenu
            Block(format=middleAirLeft)
                Block(layout=Horizontal)
                    Text(format=bold, visible=false) label
                    Block(format=middleAirLeft, visible=false) prototypeAdvise > Text(value="Plantilla", mode=Uppercase, format=prototypeAdviseStyle)
                Text(format=body2 grey, visible=false) description

rule type(toolbar) and trigger(navigableExpanded)

rule type(toolbar, collectable) and trigger(navigable)
    MaterialIconButton(title="Anterior", icon="KeyboardArrowLeft", size=Small, format=airRight, visible=false) previous as SelectPreviousItem(collection=empty)
    MaterialIconButton(title="Siguiente", icon="KeyboardArrowRight", size=Small, format=airRight, visible=false) next as SelectNextItem(collection=empty)

rule type(toolbar) and trigger(navigable)

rule type(addList)

rule type(operationsGroup)
    SplitButton(title = "Operaciones", options = <<$operation+option...[ ]>>, defaultOption = "$defaultOperation", size=Small, format=airRight, visible=false) operaciones

rule type(operation, download)
    Button(title="$label", size=Small, highlight=Outline, format=airRight) $name+lowerCase as Download<< Affirmed("$confirmText")>>

rule type(operation) and trigger(option)
    "$label"

rule type(operation)
    Button(title="$label", size=Small, highlight=Outline, format=airRight) $name+lowerCase as Action<< Affirmed("$confirmText")>>

rule type(nodeview, linksin) and trigger(revisionDeclaration)

rule type(nodeview, linksout) and trigger(revisionDeclaration)

rule type(nodeview, notes) and trigger(revisionDeclaration)

rule type(nodeview, location) and trigger(revisionDeclaration)

rule type(nodeview, revisions) and trigger(revisionDeclaration)

rule type(nodeview, tasks) and trigger(revisionDeclaration)

rule type(nodeview, recenttask) and trigger(revisionDeclaration)

rule type(nodeview, visibleWhenEmbedded) and trigger(revisionDeclaration)

rule type(nodeview) and trigger(revisionDeclaration)
    Text(value="$label") $name+firstLowerCase as Option

rule type(nodeview, visibleWhenEmbedded) and trigger(declaration)

rule type(nodeview) and trigger(declaration)
    Text(value="$label") $name+firstLowerCase as Option

rule type(nodeview, linksin) and trigger(revisionPage)

rule type(nodeview, visibleWhenEmbedded) and trigger(page)

rule type(nodeview, linksin) and trigger(page)
    Block(layout=Vertical Flexible, format=spaced) $name+firstLowerCase~View as Conditional(header.headerToolbar.viewSelector.$name+firstLowerCase) Relative(height=100%) > OwnerTemplateStamp(template="NodeLinksInTemplate", owner=$module+firstUpperCase~Elements.goros) $name+firstLowerCase~ViewStamp

rule type(nodeview, linksout) and trigger(revisionPage)

rule type(nodeview, linksout) and trigger(page)
    Block(layout=Vertical Flexible, format=spaced) $name+firstLowerCase~View as Conditional(header.headerToolbar.viewSelector.$name+firstLowerCase) Relative(height=100%) > OwnerTemplateStamp(template="NodeLinksOutTemplate", owner=$module+firstUpperCase~Elements.goros) $name+firstLowerCase~ViewStamp

rule type(nodeview, notes) and trigger(revisionPage)

rule type(nodeview, notes) and trigger(page)
    Block(layout=Vertical Flexible, format=spaced) $name+firstLowerCase~View as Conditional(header.headerToolbar.viewSelector.$name+firstLowerCase) Relative(height=100%) > OwnerTemplateStamp(template="NodeNotesTemplate", owner=$module+firstUpperCase~Elements.goros) $name+firstLowerCase~ViewStamp

rule type(nodeview, location) and trigger(revisionPage)

rule type(nodeview, location) and trigger(page)
    Block(layout=Vertical Flexible, format=spaced) $name+firstLowerCase~View as Conditional(header.headerToolbar.viewSelector.$name+firstLowerCase) Relative(height=100%) > OwnerTemplateStamp(template="NodeLocationTemplate", owner=$module+firstUpperCase~Elements.goros) $name+firstLowerCase~ViewStamp

rule type(nodeview, tasks) and trigger(revisionPage)

rule type(nodeview, tasks) and trigger(page)
    Block(layout=Vertical Flexible, format=spaced) $name+firstLowerCase~View as Conditional(header.headerToolbar.viewSelector.$name+firstLowerCase) Relative(height=100%) > TemplateStamp(template=NodeTasksTemplate) $name+firstLowerCase~ViewStamp

rule type(nodeview, recenttask) and trigger(revisionPage)

rule type(nodeview, location) and trigger(revisionPage)

rule type(nodeview, locations) and trigger(revisionPage)

rule type(nodeview, revisions) and trigger(revisionPage)

rule type(nodeview, linksin) and trigger(use)

rule type(nodeview, linksout) and trigger(use)

rule type(nodeview, location) and trigger(use)

rule type(nodeview, locations) and trigger(use)

rule type(nodeview, revisions) and trigger(use)

rule type(nodeview, tasks) and trigger(use)
    use Tasks

rule type(nodeview) and trigger(use)
    $show+use

rule type(nodeview, visibleWhenEmbedded) and trigger(revisionPage)

rule type(nodeview) and trigger(revisionPage)
    Block(layout=Vertical Flexible, format=spaced) $name+firstLowerCase~View as Conditional(header.headerToolbar.viewSelector.$name+firstLowerCase) Relative(height=100%) > TemplateStamp(template=$definition+firstUpperCase~$name+firstUpperCase~ViewTemplate) $name+firstLowerCase~ViewStamp

rule type(nodeview) and trigger(page)
    Block(layout=Vertical Flexible, format=spaced) $name+firstLowerCase~View as Conditional(header.headerToolbar.viewSelector.$name+firstLowerCase) Relative(height=100%) > TemplateStamp(template=$definition+firstUpperCase~$name+firstUpperCase~ViewTemplate) $name+firstLowerCase~ViewStamp

rule type(nodeview, linksin)

rule type(nodeview, linksout)

rule type(nodeview, tasks)

rule type(nodeview, notes)

rule type(nodeview, location)
    Template(layout=Vertical CenterJustified) $definition+firstUpperCase~$name+firstUpperCase~ViewTemplate as Relative(height=100%)
        $show

rule type(nodeview, locations)

rule type(nodeview, recenttask)
    Template(layout=Vertical CenterJustified) $definition+firstUpperCase~$name+firstUpperCase~ViewTemplate as Relative(height=100%)
        $show

rule type(nodeview)
    Template(layout=Horizontal CenterJustified) $definition+firstUpperCase~$name+firstUpperCase~ViewTemplate as Relative(height=100%)
        $show

rule type(show, recenttask) and trigger(use)
    <<$tasktype+use...[$NL]>>

rule type(tasktype) and trigger(use)
    use $name+firstUpperCase...[$NL]

rule type(show, recenttask)
	Block(layout=Vertical Flexible CenterCenter, visible=false) noTaskMessage as Relative(height=100%)> Text(value="No hay tareas pendientes", format=h5, translate=true)
	Block(format=dialog bordered) toolbarBlock > OwnerTemplateStamp(template="TaskToolbarTemplate", owner=$module+firstUpperCase~Elements.goros) toolbar
	Block(layout=Vertical Flexible, visible=false) viewsBlock
        <<$tasktype...[$NL]>>

rule type(tasktype)
    Block $name+firstLowerCase~View as Conditional > TemplateStamp(template=$name+firstUpperCase~StateViewTemplate) $name+firstLowerCase~ViewStamp

rule type(show, revisions)
	Block(layout=Vertical Flexible, format=bordered)
		OwnerTemplateStamp(template="NodeRevisionsTemplate", owner=$module+firstUpperCase~Elements.goros) revisionsStamp

	Block(layout=Vertical CenterCenter) selectRevisionPage as Relative(width=55%) > Text(value="Seleccione una revisión para ver su contenido", format=h5)

	Block(format=smallAirLeft middleSpaced bordered, visible=false) revisionPage as Animated Relative(width=55%)
		Transition(direction=Left)
		TemplateStamp(template=$definition+firstUpperCase~EmbeddedTemplate) currentRevisionStamp

rule type(show) and trigger(use)