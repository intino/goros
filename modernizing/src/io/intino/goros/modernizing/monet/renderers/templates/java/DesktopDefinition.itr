def type(desktopdefinition)
    package $package.$module+lowerCase.box.ui.displays.templates;

    import $package.$module+lowerCase.box.$boxName+firstUpperCase~Box;
    import org.monet.space.kernel.model.Source;
    import org.monet.space.kernel.model.Node;
    import io.intino.goros.unit.util.AccountHelper;
    import io.intino.goros.unit.util.NodeHelper;

    public class $name+firstUpperCase~Template extends Abstract$name+firstUpperCase~Template<$boxName+firstUpperCase~Box> {

        public $name+firstUpperCase~Template($boxName+firstUpperCase~Box box) {
            super(box);
        }

        @Override
        public void refresh() {
            super.refresh();
            refreshLabels();
        }

        private void refreshLabels() {
            labels.visible(false);
            [$view+refreshCall...[$NL]]
            labels.visible(true);
        }

        [$view+refreshMethod...[$NL]]
    }
end

def type(nodeview) trigger(refreshCall)
    $show+refreshCall
end

def type(nodeview) trigger(refreshMethod)
    $show+refreshMethod
end

def type(show) trigger(refreshCall)
    [$item+refreshCall...[$NL]]
end

def type(show) trigger(refreshMethod)
    [$item+refreshMethod...[$NL]]
end

def type(item) trigger(refreshCall)
    refresh$name+firstUpperCase();
end

def type(item & thesaurus) trigger(refreshMethod)
    private void refresh$name+firstUpperCase() {
        Source<?> source = io.intino.goros.unit.util.SourceHelper.locateSource("$code");
        $name+firstLowerCase.visible(source != null);
        if (source == null) return;
        $name+firstLowerCase~Link.address(path -> path.replace(":name", "$name+lowerCase"));
        $name+firstLowerCase~Link.title(source.getLabel());
    }
end

def type(item) trigger(refreshMethod)
    private void refresh$name+firstUpperCase() {
        Node node = io.intino.goros.unit.util.NodeHelper.singleton("$code");
        $name+firstLowerCase.visible(node != null && AccountHelper.hasRoles(node.getDefinition(), session()));
        if (node == null) return;
        $name+firstLowerCase~Link.address(path -> path.replace(":name", "$name+lowerCase"));
        $name+firstLowerCase~Link.title(node.getLabel());
    }
end