def type(view)
    package $package.$module+lowerCase.box.ui.displays.tables;

    import $package.$module+lowerCase.box.$module+firstUpperCase~Box;
    import $package.$module+lowerCase.box.ui.displays.rows.$definition+firstUpperCase$name+firstUpperCase~TableRow;
    import io.intino.alexandria.ui.displays.events.AddItemEvent;
    import org.monet.space.kernel.model.NodeItem;

    public class $definition+firstUpperCase$name+firstUpperCase~Table extends Abstract$definition+firstUpperCase$name+firstUpperCase~Table<$module+firstUpperCase~Box> {

        public $definition+firstUpperCase$name+firstUpperCase~Table($module+firstUpperCase~Box box) {
            super(box);
        }

        @Override
        public void init() {
            super.init();
            onAddItem(this::fillItem);
        }

        private void fillItem(AddItemEvent e) {
            NodeItem item = e.item();
            $definition+firstUpperCase$name+firstUpperCase~TableRow row = e.component();
            [$attribute...[$NL]]
        }
    }
end

def type(attribute & date)
end

def type(attribute & picture)
end

def type(attribute & real)
    row.$definition+firstLowerCase$view+firstUpperCase~Table$name+firstUpperCase~Item.$name+firstLowerCase.value(io.intino.goros.unit.util.NodeHelper.numberOf(item, "$code"));
end

def type(attribute & integer)
    row.$definition+firstLowerCase$view+firstUpperCase~Table$name+firstUpperCase~Item.$name+firstLowerCase.value(io.intino.goros.unit.util.NodeHelper.numberOf(item, "$code"));
end

def type(attribute)
    row.$definition+firstLowerCase$view+firstUpperCase~Table$name+firstUpperCase~Item.$name+firstLowerCase.value(io.intino.goros.unit.util.NodeHelper.valueOf(item, "$code"));
end
