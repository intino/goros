def type(source)
    package $package.$module+lowerCase.box.ui.displays.templates;

    import $package.$module+lowerCase.box.$module+firstUpperCase~Box;
    import org.monet.metamodel.SourceDefinition;
    import org.monet.space.kernel.model.Source;
    import io.intino.goros.util.Formatters;
    import io.intino.goros.util.SourceHelper;

    public class $name+firstUpperCase~Template extends Abstract$name+firstUpperCase~Template<$module+firstUpperCase~Box> {
        private Source<SourceDefinition> source;

        public $name+firstUpperCase~Template($module+firstUpperCase~Box box) {
            super(box);
        }

        public $name+firstUpperCase~Template open(String source) {
            return this;
        }

        @Override
        public void refresh() {
            super.refresh();
            source = SourceHelper.locateSource("$code");
            content.onTermsCountChange(this::refreshCount);
            content.source(source);
            content.refresh();
        }

        private void refreshCount(long countValue) {
            count.value(Formatters.countMessage(countValue, translate("Term").toLowerCase(), translate("Terms").toLowerCase()));
        }

    }
end