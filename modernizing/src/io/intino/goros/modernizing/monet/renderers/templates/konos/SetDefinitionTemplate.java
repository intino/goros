package io.intino.goros.modernizing.monet.renderers.templates.konos;

import io.intino.itrules.template.Rule;
import io.intino.itrules.template.Template;

import java.util.ArrayList;
import java.util.List;

import static io.intino.itrules.template.condition.predicates.Predicates.*;
import static io.intino.itrules.template.outputs.Outputs.*;

public class SetDefinitionTemplate extends Template {

	public List<Rule> ruleSet() {
		List<Rule> rules = new ArrayList<>();
		rules.add(rule().condition(allTypes("setdefinition")).output(literal("dsl Konos\n\nuse UI\nuse Theme\n")).output(expression().output(placeholder("toolbar", "import"))).output(literal("\n\nTemplate(layout=Vertical Flexible, format=smallAir) ")).output(placeholder("name", "firstUpperCase")).output(literal("Template\n    Block(layout=Horizontal, format=headerSpaced) header\n        Block(layout=Vertical Flexible)\n            Block(layout=Horizontal Center)\n                ")).output(expression().output(placeholder("desktop"))).output(literal("\n                ")).output(expression().output(placeholder("parent"))).output(literal("\n                Text(value=\"")).output(placeholder("label")).output(literal("\", format=h4 bold) label\n            Text(format=body2) count\n            Text(format=body2 grey) description\n            Block(layout=Horizontal, visible=false) sortingsBlock as Relative(width=75%)\n                Text(value=\"Ordenar por:\", format=body2 noSpaceWrap middleAirRight);\n                Selector(format=body2 bold) sortings as ComboBox(placeholder=\"Seleccione una ordenación\", view=TextView)\n                Selector(format=body2 bold airRight, visible=false) sortingsMode as ComboBox(placeholder=\"Tipo\", view=TextView)\n                Link(format=body1, title=\"quitar\", visible=false) removeSorting\n        Block(layout=Vertical) rightToolbar\n            Block(layout=Horizontal Center)\n                Block(format=relative doubleAirRight)\n                    SearchBox(collections = empty) search\n                    Block(format=filterByTitleStyle) > Selector(visible=false, format=body2) filterByTitle as CheckBox > Text(value=\"por título\", format=body2 grey) as Option\n                Selector(format=viewSelectorStyle airRight) viewSelector as ComboBox(placeholder=\"Vista\")\n                    ")).output(expression().output(placeholder("view", "selector").multiple("\n"))).output(literal("\n                MaterialIconButton(title=\"Descargar...\", icon = \"Archive\", format=airRight black) download as OpenDialog(dialog=DownloadDialog)\n                MaterialIconToggle(title=\"Cambiar de vista\", icon = \"ViewCarousel\", format=airRight, size=Small, state=Off) toggleView as Option\n                MaterialIconToggle(title=\"Filtrar\", icon = \"FilterList\", format=airRight, size=Small) filters as Option\n            Block(layout=Horizontal EndJustified, format=airRight, visible=false) filtersAppliedBlock\n                Text(format=body2 bold, cropWithEllipsis=80Chars) filtersMessage\n                Link(title=\"quitar\", format=body2 airLeft) resetFilters\n\n    Block(layout=Horizontal Flexible, format=smallAirTop) > TemplateStamp(template=")).output(placeholder("name", "firstUpperCase")).output(literal("EmbeddedTemplate) content\n\n    Dialog(title=\"Descargar...\") DownloadDialog as Relative(height=90%, width=60%)\n        InheritTemplateStamp(template=\"NodeDownloadDialog\", owner=")).output(placeholder("module", "firstUpperCase")).output(literal("Elements.goros) dialog\n\nTemplate(layout=Vertical Flexible) ")).output(placeholder("name", "firstUpperCase")).output(literal("EmbeddedTemplate as Relative(height=100%)\n    Link(title=\"\") openLayerTrigger as OpenLayer Addressable(empty)\n\n    Block(layout=Horizontal, format=bottomBordered middleBottomSpaced leftSpaced middleTopSpaced)\n        Block(layout=Vertical Flexible)\n            Toolbar toolbar\n                Button(title=\"Eliminar seleccionados\", highlight=Outline, size=Small, format=airRight, visible=false) removeSelection as Action(context=Selection) Affirmed(\"Are you sure you want to remove selection?\")\n                ")).output(placeholder("toolbar", "editable")).output(literal("\n        Block(layout=Horizontal EndJustified)\n            ")).output(placeholder("toolbar", "navigable")).output(literal("\n\n    Block(layout=Horizontal Flexible, format=smallAirTop)\n        Block(layout=Vertical Flexible) views\n            Block(layout=Horizontal EndJustified, format=bottomBordered viewsToolbarStyle, visible=false) viewsToolbar\n                MaterialIconButton(icon=\"ChevronLeft\", title=\"Ocultar listado\", size=Small) hideViews\n            Block(layout=Vertical Flexible) as Relative(height=100%)\n                ")).output(expression().output(placeholder("view", "page").multiple("\n"))).output(literal("\n\n        Block(layout=Vertical Flexible, format=smallAirLeft middleSpaced bordered) filtersView as Conditional Animated Relative(width=30%)\n            Transition(direction=Left)\n            ")).output(expression().output(placeholder("view", "filter").multiple("\n"))).output(literal("\n\n        ")).output(expression().output(placeholder("toolbar", "block"))).output(literal("\n\n")).output(expression().output(placeholder("view", "template").multiple("\n"))).output(literal("\n")).output(expression().output(placeholder("view", "filterTemplate").multiple("\n"))));
		rules.add(rule().condition(all(allTypes("nodeview", "ownedprototypes"), trigger("template"))).output(literal("Template(layout=Vertical Flexible) ")).output(placeholder("definition", "firstUpperCase")).output(placeholder("name", "firstUpperCase")).output(literal("ViewTemplate as Relative(height=100%)\n    List(itemClass=\"org.monet.space.kernel.model.Node\", scrollingMark=false, pageSize=15) ")).output(placeholder("definition", "firstLowerCase")).output(placeholder("name", "firstUpperCase")).output(literal(" as Selectable(multiple=false)\n        noItemsMessage = \"No hay elementos\"\n        Mold\n            Item(height=65px) ")).output(placeholder("definition", "firstLowerCase")).output(placeholder("name", "firstUpperCase")).output(literal("Item\n                Block(layout=Vertical, format=catalogIndexReferenceStyle)\n                    Text label\n                    Date createDate as Labeled(\"Creado el\")")));
		rules.add(rule().condition(all(allTypes("nodeview", "items"), trigger("template"))).output(literal("Template(layout=Vertical Flexible) ")).output(placeholder("definition", "firstUpperCase")).output(placeholder("name", "firstUpperCase")).output(literal("ViewTemplate as Relative(height=100%)\n    Table(itemClass=\"org.monet.space.kernel.model.Node\", scrollingMark=false, pageSize=15, format=bordered) ")).output(placeholder("definition", "firstLowerCase")).output(placeholder("name", "firstUpperCase")).output(literal(" as Selectable(multiple=false)\n        noItemsMessage = \"No hay elementos\"\n        ")).output(expression().output(placeholder("attribute", "mold").multiple("\n"))));
		rules.add(rule().condition(all(allTypes("nodeview", "index"), trigger("template"))).output(literal("Template(layout=Vertical Flexible) ")).output(placeholder("definition", "firstUpperCase")).output(placeholder("name", "firstUpperCase")).output(literal("ViewTemplate as Relative(height=100%)\n    List(itemClass=\"org.monet.space.kernel.model.Node\", scrollingMark=false, pageSize=15) ")).output(placeholder("definition", "firstLowerCase")).output(placeholder("name", "firstUpperCase")).output(literal(" as Selectable(multiple=false)\n        noItemsMessage = \"No hay elementos\"\n        Mold\n            Item(height=")).output(placeholder("height")).output(literal("px) ")).output(placeholder("definition", "firstLowerCase")).output(placeholder("name", "firstUpperCase")).output(literal("Item\n                Block(layout=Vertical, format=catalogIndexReferenceStyle)\n                    Block(layout=Horizontal Flexible)\n                        ")).output(expression().output(placeholder("picture"))).output(literal("\n                        Block(layout=Horizontal Flexible, format=airLeft)\n                            Block(layout=Vertical Flexible)\n                                ")).output(expression().output(placeholder("title"))).output(literal("\n                                Block(layout=Vertical Flexible)\n                                    Block(layout=Horizontal Wrap, format=middleAirTop) lineBlock\n                                        ")).output(expression().output(placeholder("line", "labeled").multiple("\n"))).output(literal("\n                                    Block(layout=Horizontal Wrap, format=middleAirTop) highlightBlock\n                                        ")).output(expression().output(placeholder("highlight", "highlight").multiple("\n"))).output(literal("\n                            Block(layout=Vertical End) as Relative(width=5%)\n                                ")).output(expression().output(placeholder("icon"))).output(literal("\n                                MaterialIconButton(title=\"Detalles\", icon=\"MoreHoriz\", size=Small")).output(expression().output(literal(", visible=")).output(placeholder("hasDetails"))).output(literal(") detailsTrigger as OpenPopover(popover=empty, triggerEvent=MouseOver)\n\n    Block(format=spaced) detailsDialog as Popover\n        ")).output(expression().output(placeholder("title", "details"))).output(literal("\n        Block(layout=Vertical Flexible)\n            Block(layout=Vertical, format=middleAirTop) lineBelowBlock\n                ")).output(expression().output(placeholder("lineBelow", "labeled").multiple("\n"))).output(literal("\n        Block(format=catalogIndexFooterItemStyle) footerBlock\n            ")).output(expression().output(placeholder("footer", "labeled").multiple("\n"))));
		rules.add(rule().condition(all(allTypes("nodeview", "locations"), trigger("template"))).output(literal("Template(layout=Vertical Flexible) ")).output(placeholder("definition", "firstUpperCase")).output(placeholder("name", "firstUpperCase")).output(literal("ViewTemplate as Relative(height=100%)\n    Map(itemClass=\"java.lang.String\", scrollingMark=false, pageSize=15) ")).output(placeholder("definition", "firstLowerCase")).output(placeholder("name", "firstUpperCase")).output(literal(" as Selectable(multiple=false)")).output(expression().output(literal(" ")).output(placeholder("heatmap", "firstUpperCase"))).output(expression().output(literal(" ")).output(placeholder("clustermap", "firstUpperCase"))).output(literal("\n        Zoom(defaultZoom = 6, min = 1, max = 18)\n        Center(latitude = 28.146773457066104, longitude = -15.418557420532238)\n        noItemsMessage = \"No hay elementos\"\n        Mold\n            Item(height=")).output(placeholder("height")).output(literal("px) ")).output(placeholder("definition", "firstLowerCase")).output(placeholder("name", "firstUpperCase")).output(literal("Item\n                Block(layout=Vertical, format=catalogMapItemStyle)\n                    Block(layout=Horizontal Flexible)\n                        ")).output(expression().output(placeholder("picture"))).output(literal("\n                        Block(layout=Horizontal Flexible, format=airLeft)\n                            Block(layout=Vertical Flexible)\n                                ")).output(expression().output(placeholder("title"))).output(literal("\n                                Block(layout=Vertical Flexible)\n                                    Block(layout=Horizontal Wrap, format=middleAirTop) lineBlock\n                                        ")).output(expression().output(placeholder("line", "labeled").multiple("\n"))).output(literal("\n                                    Block(layout=Horizontal Wrap, format=middleAirTop) lineBelowBlock\n                                        ")).output(expression().output(placeholder("lineBelow", "labeled").multiple("\n"))).output(literal("\n                                    Block(layout=Horizontal Wrap, format=middleAirTop) highlightBlock\n                                        ")).output(expression().output(placeholder("highlight", "highlight").multiple("\n"))).output(literal("\n                            Block(layout=Vertical End) as Relative(width=5%)\n                                ")).output(expression().output(placeholder("icon"))).output(literal("\n                    Block(format=catalogIndexFooterItemStyle) footerBlock\n                        ")).output(expression().output(placeholder("footer", "labeled").multiple("\n"))));
		rules.add(rule().condition(all(allTypes("nodeview"), trigger("template"))).output(literal("Template(layout=Vertical Flexible) ")).output(placeholder("definition", "firstUpperCase")).output(placeholder("name", "firstUpperCase")).output(literal("ViewTemplate as Relative(height=100%)\n    Text(value=\"NOT IMPLEMENTED!!!\")")));
		rules.add(rule().condition(all(allTypes("nodeview"), trigger("filtertemplate"))).output(literal("Template(format=fullWidth spaced) ")).output(placeholder("definition", "firstUpperCase")).output(placeholder("name", "firstUpperCase")).output(literal("FiltersTemplate as Relative(height=100%)\n    Link(title=\"Resetear filtros\", format=doubleAirBottom) reset\n    Block content\n        ")).output(expression().output(placeholder("dimension").multiple("\n"))));
		rules.add(rule().condition(allTypes("dimension")).output(literal("Block(format=doubleAirBottom) > InheritTemplateStamp(template=\"")).output(placeholder("type", "firstUpperCase")).output(literal("FilterTemplate\", owner=")).output(placeholder("module", "firstUpperCase")).output(literal("Elements.goros) ")).output(placeholder("name", "firstLowerCase")));
		rules.add(rule().condition(all(allTypes("nodeview"), trigger("filtertemplate"))).output(literal("Template(format=fullWidth spaced) ")).output(placeholder("definition", "firstUpperCase")).output(placeholder("name", "firstUpperCase")).output(literal("FiltersTemplate\n    Text(value=\"NOT IMPLEMENTED!!!\")")));
		rules.add(rule().condition(all(allTypes("nodeview"), trigger("page"))).output(literal("Block(layout=Vertical Flexible) ")).output(placeholder("name", "firstLowerCase")).output(literal("View as Conditional Relative(height=100%) > TemplateStamp(template=")).output(placeholder("definition", "firstUpperCase")).output(placeholder("name", "firstUpperCase")).output(literal("ViewTemplate, format=fullHeight) ")).output(placeholder("name", "firstLowerCase")).output(literal("ViewStamp")));
		rules.add(rule().condition(all(allTypes("nodeview"), trigger("filter"))).output(literal("Block(layout=Vertical Flexible) ")).output(placeholder("name", "firstLowerCase")).output(literal("Filters as Conditional > TemplateStamp(template=")).output(placeholder("definition", "firstUpperCase")).output(placeholder("name", "firstUpperCase")).output(literal("FiltersTemplate, format=fullHeight) ")).output(placeholder("name", "firstLowerCase")).output(literal("FiltersStamp")));
		rules.add(rule().condition(all(allTypes("nodeview", "visibleWhenEmbedded"), trigger("selector"))));
		rules.add(rule().condition(all(allTypes("nodeview"), trigger("selector"))).output(literal("Text(value=\"")).output(placeholder("label")).output(literal("\") ")).output(placeholder("name", "firstLowerCase")).output(literal(" as Option")));
		rules.add(rule().condition(all(allTypes("attribute"), trigger("mold"))).output(literal("Mold\n    Heading ")).output(placeholder("shortName", "firstLowerCase")).output(literal("Heading > Text(value=\"")).output(placeholder("label")).output(literal("\")\n    Item(height=25px,width=")).output(placeholder("width")).output(literal("%) ")).output(placeholder("shortName", "firstLowerCase")).output(literal("Item > Text(value=\"Loading...\"")).output(expression().output(literal(", cropWithEllipsis=")).output(placeholder("cropWithEllipsis")).output(literal(" Chars"))).output(literal(") ")).output(placeholder("name", "firstLowerCase")));
		rules.add(rule().condition(all(allTypes("attribute"), trigger("details"))).output(literal("Text(format=h4 airBottom) ")).output(placeholder("name", "firstLowerCase")).output(literal("Details")));
		rules.add(rule().condition(all(allTypes("attribute", "location"), trigger("title"))).output(literal("Link(title=\"Cargando...\", format=h4) ")).output(placeholder("name", "firstLowerCase")));
		rules.add(rule().condition(all(allTypes("attribute"), trigger("title"))).output(placeholder("type", "firstUpperCase")).output(literal("(value=\"Cargando...\", format=h4")).output(expression().output(literal(", cropWithEllipsis=")).output(placeholder("cropWithEllipsis")).output(literal(" Chars"))).output(expression().output(literal(", pattern=\"")).output(placeholder("pattern")).output(literal("\""))).output(literal(") ")).output(placeholder("name", "firstLowerCase")));
		rules.add(rule().condition(all(allTypes("attribute"), trigger("labeled"))).output(placeholder("type", "firstUpperCase")).output(literal("(format=body2 doubleAirRight")).output(expression().output(literal(", cropWithEllipsis=")).output(placeholder("cropWithEllipsis")).output(literal(" Chars"))).output(expression().output(literal(", pattern=\"")).output(placeholder("pattern")).output(literal("\""))).output(literal(") ")).output(placeholder("name", "firstLowerCase")).output(literal(" as Labeled(\"")).output(placeholder("label")).output(literal("\")")));
		rules.add(rule().condition(all(allTypes("attribute"), trigger("highlight"))).output(placeholder("type", "firstUpperCase")).output(literal("(format=body2 doubleAirRight")).output(expression().output(literal(", cropWithEllipsis=")).output(placeholder("cropWithEllipsis")).output(literal(" Chars"))).output(expression().output(literal(", pattern=\"")).output(placeholder("pattern")).output(literal("\""))).output(literal(") ")).output(placeholder("name", "firstLowerCase")).output(literal(" as Highlighted(backgroundColor=\"#CD3E2D\", textColor=\"white\")")));
		rules.add(rule().condition(all(allTypes("attribute"), trigger("picture"))).output(literal("Block > Image(defaultValue=\"images/no-picture.jpg\") ")).output(placeholder("name", "firstLowerCase")).output(literal(" as Absolute(width=96px,height=96px)")));
		rules.add(rule().condition(all(allTypes("attribute"), trigger("icon"))).output(literal("Icon(icon=empty, format=doubleAirRight) ")).output(placeholder("name", "firstLowerCase")));
		rules.add(rule().condition(all(allTypes("addList"), trigger("import"))).output(expression().output(placeholder("add", "import").multiple("\n"))));
		rules.add(rule().condition(all(allTypes("add"), trigger("import"))).output(literal("use ")).output(placeholder("name", "firstUpperCase")));
		rules.add(rule().condition(all(allTypes("addList"), trigger("option"))).output(literal("SplitButton(title=")).output(placeholder("defaultAdd", "option")).output(literal(", highlight=Outline, size=Small, format=airRight, options=")).output(expression().output(placeholder("add", "option").multiple(" "))).output(literal(", defaultOption=\"Añadir Formulario 1\", visible=false) addSplit as Action\nButton(title=")).output(placeholder("defaultAdd", "option")).output(literal(", highlight=Outline, size=Small, format=airRight, visible=false) add as Action\nSplitButton(title=")).output(placeholder("defaultAddPrototype", "option")).output(literal(", highlight=Outline, size=Small, format=airRight, options=")).output(expression().output(placeholder("add", "option").multiple(" "))).output(literal(", defaultOption=\"Añadir Formulario 1\", visible=false) addPrototypeSplit as Action\nButton(title=\"Añadir\", highlight=Outline, size=Small, format=airRight, visible=false) addPrototype as Action")));
		rules.add(rule().condition(all(allTypes("add", "empty"), trigger("option"))).output(literal("\"\"")));
		rules.add(rule().condition(all(allTypes("add"), trigger("option"))).output(literal("\"Añadir ")).output(placeholder("label")).output(literal("\"")));
		rules.add(rule().condition(all(allTypes("toolbar"), trigger("block"))).output(placeholder("addList", "block")));
		rules.add(rule().condition(all(allTypes("addList"), trigger("block"))).output(expression().output(placeholder("add", "block").multiple("\n"))));
		rules.add(rule().condition(all(allTypes("add"), trigger("block"))).output(literal("Block(layout=Vertical Flexible, format=smallAirLeft middleSpaced bordered) ")).output(placeholder("name", "firstLowerCase")).output(literal("View as Conditional Animated Relative(width=55%)\n    Transition(direction=Left)\n    TemplateStamp(template=")).output(placeholder("name", "firstUpperCase")).output(literal("EmbeddedTemplate) ")).output(placeholder("name", "firstLowerCase")).output(literal("Stamp")));
		return rules;
	}

	public String render(Object object) {
		return new io.intino.itrules.Engine(this).render(object);
	}

	public String render(Object object, java.util.Map<String, io.intino.itrules.Formatter> formatters) {
		return new io.intino.itrules.Engine(this).addAll(formatters).render(object);
	}
}