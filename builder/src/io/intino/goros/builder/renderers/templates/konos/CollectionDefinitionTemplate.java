package io.intino.goros.builder.renderers.templates.konos;

import io.intino.itrules.RuleSet;
import io.intino.itrules.Template;

public class CollectionDefinitionTemplate extends Template {

	public RuleSet ruleSet() {
		return new RuleSet().add(
			rule().condition((type("collectiondefinition"))).output(literal("dsl Konos\n\nuse UI\nuse Theme\n")).output(expression().output(mark("add", "import").multiple("\n"))).output(literal("\n\nTemplate(layout=Vertical Flexible, format=smallAir) ")).output(mark("name", "firstUpperCase")).output(literal("Template\n    Block(layout=Horizontal, format=bordered spaced) header\n        Block(layout=Vertical Flexible)\n            Block(layout=Horizontal)\n                Link(title=\"Inicio\", format=h4 middleAirRight) as Action Addressable(")).output(mark("module", "firstUpperCase")).output(literal("Elements.inicio)\n                Text(value=\"/\", format=h4 middleAirRight)\n                ")).output(mark("parent")).output(literal("\n                Text(value=\"")).output(mark("label")).output(literal("\", format=h4 bold)\n            Text(format=body2) count\n        Block(layout=Horizontal Center) rightToolbar\n            SearchBox(collections = empty, format=airRight smallAirTop) search\n            MaterialIconButton(title=\"Descargar\", icon = \"Archive\", format=airRight black) download\n            Selector(format=airRight) viewSelector as ToggleBox(size=Small)\n                ")).output(expression().output(mark("view", "selector").multiple("\n"))).output(literal("\n            MaterialIconToggle(title=\"Filtrar\", icon = \"FilterList\", format=airRight, size=Small) filters as Option\n\n    Block(layout=Horizontal Flexible, format=smallAirTop)\n        Block(layout=Vertical Flexible, format=bordered)\n            TemplateStamp(template=")).output(mark("name", "firstUpperCase")).output(literal("ToolbarTemplate) toolbar\n            Block(layout=Vertical Flexible) as Relative(height=100%)\n                ")).output(expression().output(mark("view", "page").multiple("\n"))).output(literal("\n\n        Block(format=smallAirLeft middleSpaced bordered) filtersView as Conditional Animated Relative(width=30%)\n            Transition(direction=Left)\n            ")).output(expression().output(mark("view", "filter").multiple("\n"))).output(literal("\n\n        ")).output(expression().output(mark("add", "block").multiple("\n"))).output(literal("\n\n")).output(expression().output(mark("view", "template").multiple("\n"))).output(literal("\n\nTemplate(layout=Horizontal, format=air) ")).output(mark("name", "firstUpperCase")).output(literal("ToolbarTemplate\n    Toolbar toolbar\n        Button(title=\"Editar\", highlight=Outline, size=Small, format=airRight) edit as Action\n        Button(title=\"Eliminar seleccionados\", highlight=Outline, size=Small, format=airRight, visible=false) removeSelection as Action(context=Selection) Affirmed(\"Are you sure you want to remove selection?\")\n        SplitButton(title=")).output(mark("defaultAdd", "option")).output(literal(", highlight=Outline, size=Small, format=airRight, options=")).output(expression().output(mark("add", "option").multiple(" "))).output(literal(", defaultOption=\"AÃ±adir Formulario 1\", visible=false) add as Action\n\n")).output(expression().output(mark("view", "filterTemplate").multiple("\n"))),
			rule().condition((allTypes("nodeview","items")), (trigger("template"))).output(literal("Template(layout=Vertical Flexible) ")).output(mark("definition", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("ViewTemplate as Relative(height=100%)\n    Table(itemClass=\"org.monet.space.kernel.model.Node\", scrollingMark=false, format=bordered) ")).output(mark("definition", "firstLowerCase")).output(mark("name", "firstUpperCase")).output(literal(" as Selectable(multiple=false)\n        noItemsMessage = \"No hay elementos\"\n        ")).output(expression().output(mark("attribute", "mold").multiple("\n"))),
			rule().condition((allTypes("nodeview","index")), (trigger("template"))).output(literal("Template(layout=Vertical Flexible) ")).output(mark("definition", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("ViewTemplate as Relative(height=100%)\n    List(itemClass=\"org.monet.space.kernel.model.Node\", scrollingMark=false) ")).output(mark("definition", "firstLowerCase")).output(mark("name", "firstUpperCase")).output(literal(" as Selectable(multiple=false)\n        noItemsMessage = \"No hay elementos\"\n        Mold\n            Item(height=165px) ")).output(mark("definition", "firstLowerCase")).output(mark("name", "firstUpperCase")).output(literal("Item\n                Block(layout=Vertical, format=catalogIndexReferenceStyle)\n                    Block(layout=Horizontal Flexible)\n                        ")).output(expression().output(mark("picture"))).output(literal("\n                        Block(layout=Horizontal Flexible, format=airLeft)\n                            Block(layout=Vertical Flexible)\n                                ")).output(expression().output(mark("title"))).output(literal("\n                                Block(layout=Vertical Flexible)\n                                    Block(layout=Horizontal, format=middleAirTop) lineBlock\n                                        ")).output(expression().output(mark("line", "labeled").multiple("\n"))).output(literal("\n                                    Block(layout=Horizontal, format=middleAirTop) lineBelowBlock\n                                        ")).output(expression().output(mark("lineBelow", "labeled").multiple("\n"))).output(literal("\n                                    Block(layout=Horizontal, format=middleAirTop) highlightBlock\n                                        ")).output(expression().output(mark("highlight", "highlight").multiple("\n"))).output(literal("\n                            Block(layout=Vertical End) as Relative(width=5%)\n                                ")).output(expression().output(mark("icon"))).output(literal("\n                    Block(format=catalogIndexFooterItemStyle) footerBlock\n                        ")).output(expression().output(mark("footer", "labeled").multiple("\n"))),
			rule().condition((allTypes("nodeview","locations")), (trigger("template"))).output(literal("Template(layout=Vertical Flexible) ")).output(mark("definition", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("ViewTemplate as Relative(height=100%)\n    Map(itemClass=\"org.monet.space.kernel.model.Node\", scrollingMark=false) ")).output(mark("definition", "firstLowerCase")).output(mark("name", "firstUpperCase")).output(literal(" as Selectable(multiple=false)\n        Zoom(defaultZoom = 6, min = 1, max = 18)\n        Center(latitude = 28.146773457066104, longitude = -15.418557420532238)\n        noItemsMessage = \"No hay elementos\"\n        Mold\n            Item(height=165px) ")).output(mark("definition", "firstLowerCase")).output(mark("name", "firstUpperCase")).output(literal("Item\n                Block(layout=Vertical, format=catalogMapItemStyle)\n                    Block(layout=Horizontal Flexible)\n                        ")).output(expression().output(mark("picture"))).output(literal("\n                        Block(layout=Horizontal Flexible, format=airLeft)\n                            Block(layout=Vertical Flexible)\n                                ")).output(expression().output(mark("title"))).output(literal("\n                                Block(layout=Vertical Flexible)\n                                    Block(layout=Horizontal, format=middleAirTop) lineBlock\n                                        ")).output(expression().output(mark("line", "labeled").multiple("\n"))).output(literal("\n                                    Block(layout=Horizontal, format=middleAirTop) lineBelowBlock\n                                        ")).output(expression().output(mark("lineBelow", "labeled").multiple("\n"))).output(literal("\n                                    Block(layout=Horizontal, format=middleAirTop) highlightBlock\n                                        ")).output(expression().output(mark("highlight", "highlight").multiple("\n"))).output(literal("\n                            Block(layout=Vertical End) as Relative(width=5%)\n                                ")).output(expression().output(mark("icon"))).output(literal("\n                    Block(format=catalogIndexFooterItemStyle) footerBlock\n                        ")).output(expression().output(mark("footer", "labeled").multiple("\n"))),
			rule().condition((type("nodeview")), (trigger("template"))).output(literal("Template(layout=Vertical Flexible) ")).output(mark("definition", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("ViewTemplate as Relative(height=100%)\n    Text(value=\"NOT IMPLEMENTED!!!\")")),
			rule().condition((type("nodeview")), (trigger("filtertemplate"))).output(literal("Template(format=fullWidth spaced) ")).output(mark("definition", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("FiltersTemplate\n    Link(title=\"Resetear filtros\", format=doubleAirBottom) reset\n    ")).output(expression().output(mark("dimension").multiple("\n"))),
			rule().condition((type("dimension"))).output(literal("Block(format=doubleAirBottom) > OwnerTemplateStamp(template=\"")).output(mark("type", "firstUpperCase")).output(literal("FilterTemplate\", owner=")).output(mark("module", "firstUpperCase")).output(literal("Elements.goros) ")).output(mark("name", "firstLowerCase")),
			rule().condition((type("nodeview")), (trigger("filtertemplate"))).output(literal("Template(format=fullWidth spaced) ")).output(mark("definition", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("FiltersTemplate\n    Text(value=\"NOT IMPLEMENTED!!!\")")),
			rule().condition((type("nodeview")), (trigger("page"))).output(literal("Block(layout=Vertical Flexible) ")).output(mark("name", "firstLowerCase")).output(literal("View as Conditional(header.rightToolbar.viewSelector.")).output(mark("name", "firstLowerCase")).output(literal(") Relative(height=100%) > TemplateStamp(template=")).output(mark("definition", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("ViewTemplate, format=fullHeight) ")).output(mark("name", "firstLowerCase")).output(literal("ViewStamp")),
			rule().condition((type("nodeview")), (trigger("filter"))).output(literal("Block(layout=Vertical Flexible) ")).output(mark("name", "firstLowerCase")).output(literal("Filters as Conditional(selected=header.rightToolbar.viewSelector.")).output(mark("name", "firstLowerCase")).output(literal(") > TemplateStamp(template=")).output(mark("definition", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("FiltersTemplate, format=fullHeight) ")).output(mark("name", "firstLowerCase")).output(literal("FiltersStamp")),
			rule().condition((type("nodeview")), (trigger("selector"))).output(literal("MaterialIconButton(title=\"")).output(mark("label")).output(literal("\", icon=\"")).output(mark("materialIcon")).output(literal("\", size=Small) ")).output(mark("name", "firstLowerCase")).output(literal(" as Option")),
			rule().condition((type("attribute")), (trigger("mold"))).output(literal("Mold\n    Heading ")).output(mark("definition", "firstLowerCase")).output(mark("view", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("Heading > Text(value=\"")).output(mark("label")).output(literal("\")\n    Item(height=50px,width=")).output(mark("width")).output(literal("%) ")).output(mark("definition", "firstLowerCase")).output(mark("view", "firstUpperCase")).output(mark("name", "firstUpperCase")).output(literal("Item > Text(value=\"Loading...\") ")).output(mark("name", "firstLowerCase")),
			rule().condition((type("attribute")), (trigger("title"))).output(mark("type", "firstUpperCase")).output(literal("(value=\"Cargando...\", format=h4) ")).output(mark("name", "firstLowerCase")),
			rule().condition((type("attribute")), (trigger("labeled"))).output(mark("type", "firstUpperCase")).output(literal("(format=body2 doubleAirRight) ")).output(mark("name", "firstLowerCase")).output(literal(" as Labeled(\"")).output(mark("label")).output(literal("\")")),
			rule().condition((type("attribute")), (trigger("highlight"))).output(mark("type", "firstUpperCase")).output(literal("(format=body2 doubleAirRight) ")).output(mark("name", "firstLowerCase")).output(literal(" as Highlighted(backgroundColor=\"#CD3E2D\", textColor=\"white\")")),
			rule().condition((type("attribute")), (trigger("picture"))).output(literal("Block > Image(defaultValue=\"images/no-picture.jpg\") ")).output(mark("name", "firstLowerCase")).output(literal(" as Absolute(width=96px,height=96px)")),
			rule().condition((type("attribute")), (trigger("icon"))).output(literal("Icon(icon=empty, format=doubleAirRight) ")).output(mark("name", "firstLowerCase")),
			rule().condition((type("add")), (trigger("import"))).output(literal("use ")).output(mark("name", "firstUpperCase")),
			rule().condition((type("add")), (trigger("option"))).output(literal("\"AÃ±adir ")).output(mark("label")).output(literal("\"")),
			rule().condition((type("add")), (trigger("block"))).output(literal("Block(layout=Vertical Flexible, format=smallAirLeft middleSpaced bordered) ")).output(mark("name", "firstLowerCase")).output(literal("View as Conditional Animated Relative(width=55%)\n    Transition(direction=Left)\n    TemplateStamp(template=")).output(mark("name", "firstUpperCase")).output(literal("EmbeddedTemplate) ")).output(mark("name", "firstLowerCase")).output(literal("Stamp"))
		);
	}
}